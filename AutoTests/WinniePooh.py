'''
Винни Пух
Винни-Пух попросил Вас посмотреть, есть ли в его стихах ритм. 
Поскольку разобраться в его кричалках не настолько просто, насколько легко он их придумывает,
Вам стоит написать программу.

Винни-Пух считает, что ритм есть, если число слогов (т.е. число гласных букв) 
в каждой фразе стихотворения одинаковое.
Фраза может состоять из одного слова, если во фразе несколько слов, 
то они разделяются дефисами.
Фразы отделяются друг от друга пробелами.

Стихотворение  Винни-Пух передаст вам автоматически в переменную stroka в виде строки. 
В ответе напишите Парам пам-пам, если с ритмом все в порядке и Пам парам, если с ритмом все не в порядке.
Если фраза только одна, то ритм определить не получится и необходимо вывести: 
Количество фраз должно быть больше одной!.

Пример:


На входе:
stroka = 'пара-ра-рам рам-пам-папам па-ра-па-дам'

На выходе:
Парам пам-пам
'''

# не совсем верно- где-то ошибка

stroka = 'пара-ра-рам рам-пам-папам па-ра-па-дам'
vowels = ['а', 'е', 'ё', 'и', 'й', 'о', 'у', 'ы', 'э', 'ю', 'я']
words_slogs = [] # список, где будем хранить кол-во слогов в каждом слове соответственно
for word in stroka: # проходимся по списку
    count = 0
    for i in word: # проходимся по слову
        if i in vowels: # и проверяем, если символ внутри слова есть в гласных
            count += 1 # мы будем его считать vowels
    words_slogs.append(count)
if len(words_slogs) == words_slogs.count(words_slogs[0]): # если длина списка со слогами = кол-ву, .count() - метод позволяет считать элементы в списке, words_slogs[0] - кол-во 1-ого элемента в списке 
    print("Парам пам-пам")
else:
    print("Пам парам")


# Эталонное решение
    
vowels = ['а', 'е', 'ё', 'и', 'й', 'о', 'у', 'ы', 'э', 'ю', 'я']
phrases = stroka.split()
if len(phrases) < 2:
 print('Количество фраз должно быть больше одной!')
else:
 countVowels = []

 for i in phrases:
  countVowels.append(len([x for x in i if x.lower() in vowels]))

 if countVowels.count(countVowels[0]) == len(countVowels):
  print('Парам пам-пам')
 else:
  print('Пам парам')
    
